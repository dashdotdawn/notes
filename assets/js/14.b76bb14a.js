(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{172:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"『面试反省』数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#『面试反省』数组","aria-hidden":"true"}},[t._v("#")]),t._v(" 『面试反省』数组")]),t._v(" "),s("blockquote",[s("p",[t._v("数了下我从校招到上一家公司，加起来的面试经历不过一只手……\n希望这一次求职，可以多面试一些公司，了解市场、了解自身，也是对自己负责。")])]),t._v(" "),s("p",[t._v("上周投了 11 份简历，4 个被拒，4 个石沉大海，3 个面试机会，得到 2 个 offer。")]),t._v(" "),s("p",[t._v("这 3 次面试体验都非常好，遇到面试的小哥哥们都十分温和，过程中一直在引导我作更好的表述，有的对我不懂、错误的地方还作了补充和讲解，收获很大，感恩。")]),t._v(" "),s("p",[t._v("这里整理自己回答的不好、或者生疏的知识点。")]),t._v(" "),s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组","aria-hidden":"true"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("h3",{attrs:{id:"q1-平时都用哪些数组的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q1-平时都用哪些数组的方法","aria-hidden":"true"}},[t._v("#")]),t._v(" Q1: 平时都用哪些数组的方法")]),t._v(" "),s("p",[t._v("对工作中的几个项目做了个不完全统计")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("使用次数")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("push")]),t._v(" "),s("td",[t._v("347 matches across 162 files")])]),t._v(" "),s("tr",[s("td",[t._v("map")]),t._v(" "),s("td",[t._v("119 matches across 61 files")])]),t._v(" "),s("tr",[s("td",[t._v("forEach")]),t._v(" "),s("td",[t._v("114 matches across 84 files")])]),t._v(" "),s("tr",[s("td",[t._v("slice")]),t._v(" "),s("td",[t._v("83 matches across 24 files")])]),t._v(" "),s("tr",[s("td",[t._v("filter")]),t._v(" "),s("td",[t._v("70 matches across 36 files")])]),t._v(" "),s("tr",[s("td",[t._v("splice")]),t._v(" "),s("td",[t._v("28 matches across 19 files")])]),t._v(" "),s("tr",[s("td",[t._v("concat")]),t._v(" "),s("td",[t._v("27 matches across 21 files")])]),t._v(" "),s("tr",[s("td",[t._v("sort")]),t._v(" "),s("td",[t._v("22 matches across 16 files")])]),t._v(" "),s("tr",[s("td",[t._v("unshift")]),t._v(" "),s("td",[t._v("16 matches across 7 files")])]),t._v(" "),s("tr",[s("td",[t._v("shift")]),t._v(" "),s("td",[t._v("12 matches across 2 files")])]),t._v(" "),s("tr",[s("td",[t._v("reduce")]),t._v(" "),s("td",[t._v("8 matches across 6 files")])])])]),t._v(" "),s("p",[t._v("在使用数组方法的时候需要注意的一点是方法是否改变原数组, 会更改原数组的方法有：sort | reverse | push pop unshift shift | splice；map | filter | slice | 会返回新数组。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("注意事项")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("join")]),t._v(" "),s("td",[t._v("不指定分隔符默认使用逗号")])]),t._v(" "),s("tr",[s("td",[t._v("concat")]),t._v(" "),s("td",[t._v("参数为数组时则连接数组元素，如 [1].concat(2, [3, [4, 5]]) = [1,2,3,[4,5]]")])]),t._v(" "),s("tr",[s("td",[t._v("splice")]),t._v(" "),s("td",[t._v("可以修改原数组，返回被删除元素组成的数组")])]),t._v(" "),s("tr",[s("td",[t._v("toString")]),t._v(" "),s("td",[t._v("将每个元素转化为字符串后用逗号分隔输出，如 [1,2,[3,[4,5]]].toString() = [1,2,3,4,5]")])]),t._v(" "),s("tr",[s("td",[t._v("every, some")]),t._v(" "),s("td",[t._v("every 任意 some 存在，返回 boolean，空数组的 every 为 true，some 为 false")])]),t._v(" "),s("tr",[s("td",[t._v("indexOf, lastIndexOf")]),t._v(" "),s("td",[t._v("可以指定第二个参数，表示开始搜索的位置")])]),t._v(" "),s("tr",[s("td",[t._v("reduce")]),t._v(" "),s("td",[t._v("不指定初始值时使用第一个元素作为初始值，空数组不带初始值调用 reduce 将导致类型错误异常，单个元素数组将直接返回该元素")])])])]),t._v(" "),s("h3",{attrs:{id:"es6-中好用的数组方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6-中好用的数组方法","aria-hidden":"true"}},[t._v("#")]),t._v(" ES6 中好用的数组方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("注意事项")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("find, findIndex")]),t._v(" "),s("td",[t._v("返回第一个 true 的元素或 undefined, 元素索引或 -1")])]),t._v(" "),s("tr",[s("td",[t._v("includes")]),t._v(" "),s("td",[t._v("返回 boolean")])]),t._v(" "),s("tr",[s("td",[t._v("fill")]),t._v(" "),s("td",[t._v("填充值，起始位置，结束位置")])]),t._v(" "),s("tr",[s("td",[t._v("Array.from")]),t._v(" "),s("td",[t._v("将类数组、iterable 对象转化为数组")])]),t._v(" "),s("tr",[s("td",[t._v("Array.of")]),t._v(" "),s("td",[t._v("将一组值转换为数组，不存在不同参数的重载，可用来替代 Array()")])])])]),t._v(" "),s("h3",{attrs:{id:"q2-去重"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q2-去重","aria-hidden":"true"}},[t._v("#")]),t._v(" Q2: 去重")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("小哥：给你一个数组，里面有形如 {name: xxx} 的对象和 null，对 name 进行去重，保留 null。代码写一下。\n\n我：写……\n\n小哥：你觉得你写的对吗？\n\n我：改……\n\n小哥：嗯。你这里的 for 循环能不能改成 forEach ？\n\n我：可……可以？\n\n小哥：你确定吗？\n\n我：确定……\n\n小哥：……\n\n我：不……不对吗ಠ_ಠ\n\n小哥：嗯。\n\n我：为啥？\n\n小哥：forEach 在遍历的时候会跳过 null、undefined 值\n")])])]),s("p",[t._v("真的是这样吗？")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("forEach")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n")])])]),s("p",[t._v("其实并不完全是这样的，forEach 和 map 在遍历的时候会跳过的是稀疏数组的空位，而不是存在的 undefined 或 null 值。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\narr"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("3")]),t._v("\narr"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("undefined"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// arr 就是一个稀疏数组")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" arr "),s("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" arr "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" arr "),s("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("虽然 arr[0] === arr[2] 都是 undefined，但是对于数组来说，0 就是一个空位，2 则是真实存的的 undefined 值，因此 for...in、forEach、map 都只会遍历到 1、2。")]),t._v(" "),s("p",[t._v("数组是一种特殊的对象，可以使用非负整数作为索引，索引相当于一种特殊类型的属性名。而作为对象，当然可以拥有任意的属性名，因此 JavaScript 中的数组不存在越界。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("arr"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token operator"}},[t._v("-")]),s("span",{attrs:{class:"token number"}},[t._v("1.1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v('// "-1.1" 会作为属性名')]),t._v("\narr"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token string"}},[t._v("'1'")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 相当于 a[1] = 1")]),t._v("\narr"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("1.0")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 相当于 a[1] = 1")]),t._v("\n")])])]),s("p",[t._v("最后写一下解")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'a'")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'b'")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'a'")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("uniq")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" uniq_arr "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" names "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" arr"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("names"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      names"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n      uniq_arr"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" uniq_arr\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token function"}},[t._v("uniq")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"q3-数组连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q3-数组连接","aria-hidden":"true"}},[t._v("#")]),t._v(" Q3: 数组连接")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("arr1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("concat")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr2"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\narr1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("arr1"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("arr2"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\narr1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("arr2"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("push"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("apply")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr1"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr2"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"数组遍历方式的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组遍历方式的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 数组遍历方式的区别")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("特性")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("for")]),t._v(" "),s("td",[t._v("for (var i = 0;i < arr.length; i++)")])]),t._v(" "),s("tr",[s("td",[t._v("forEach, map")]),t._v(" "),s("td",[t._v("相当于在上一条的 for 循环中增加了 i in arr 的判断")])]),t._v(" "),s("tr",[s("td",[t._v("for...in")]),t._v(" "),s("td",[t._v("遍历一个对象的可枚举属性，包括继承属性，不保证顺序；因此不建议用来遍历数组")])]),t._v(" "),s("tr",[s("td",[t._v("for...of")]),t._v(" "),s("td",[t._v("遍历所有数据结构的统一方法，如 Set\\Map\\arguments\\NodeList\\数组\\字符串等，依赖于 Symbol.iterator 属性；用来遍历数组时与第一种 for 循环效果一致，只不过取到的是值而不是索引")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 一种去掉数组奇数位的方式，蛮有趣的")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" list "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("4")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("5")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("6")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nlist"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("forEach")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  arr"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("splice")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}],!1,null,null,null);r.options.__file="interview_array.md";a.default=r.exports}}]);